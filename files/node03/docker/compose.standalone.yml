services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - '80:80'
    environment:
      DEFAULT_HOST: dns.local.jonathan.com.ar
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock'
    restart: always

  pihole:
    image: pihole/pihole:latest
    ports:
      - '53:53/tcp'
      - '53:53/udp'
      - "67:67/udp"
      - '8053:80/tcp'
    volumes:
      - './etc-pihole:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
    environment:
      PROXY_LOCATION: pihole
      VIRTUAL_HOST: dns.local.jonathan.com.ar
      VIRTUAL_PORT: 80
    extra_hosts:
      - 'jonathan.com.ar:192.168.88.251'
    restart: always

  server:
    image: gitea/gitea:nightly
    container_name: gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - GITEA__database__DB_TYPE=postgres
      - GITEA__database__HOST=db:5432
      - GITEA__database__NAME=${GITEA_DB_NAME}
      - GITEA__database__USER=${GITEA_DB_USER}
      - GITEA__database__PASSWD=${GITEA_DB_PASSWD}
      - GITEA__server__ROOT_URL=https://gitea.local.jonathan.com.ar
    restart: always
    networks:
      - gitea
    volumes:
      - ./gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "9000:3000"
      - "222:22"
    depends_on:
      - db

  db:
    image: postgres:14
    restart: always
    environment:
      - POSTGRES_USER=${GITEA_DB_USER}
      - POSTGRES_PASSWORD=${GITEA_DB_PASSWD}
      - POSTGRES_DB=${GITEA_DB_NAME}
    networks:
      - gitea
    volumes:
      - ./postgres:/var/lib/postgresql/data

  netdata:
    image: netdata/netdata:edge
    container_name: netdata
    pid: host
    network_mode: host
    restart: always
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /:/host/root:ro,rslave
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/log:/host/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NETDATA_CLAIM_TOKEN=${NETDATA_CLAIM_TOKEN}
      - NETDATA_CLAIM_URL=${NETDATA_CLAIM_URL}
      - NETDATA_CLAIM_ROOMS=${NETDATA_CLAIM_ROOMS}

  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    volumes:
      - ./uptime-kuma-data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 3001:3001
    restart: always

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    user: 1000:1000
    container_name: homepage
    restart: always
    security_opt:
      - no-new-privileges
    ports:
      - 4000:3000
    volumes:
      - /volumes/homepage_data:/app/config

  gotify:
    image: gotify/server-arm64
    restart: always
    ports:
      - 8588:80
    environment:
      - GOTIFY_DEFAULTUSER_PASS=${GOTIFY_DEFAULTUSER_PASS}
    volumes:
      - /volumes/gotify_data:/app/data:rw

  database:
    image: 'postgres:latest'
    ports:
      - 15432:5432
    env_file:
      - .env
    networks:
      - postgres-network
    volumes:
      - ${PWD}/db-data/:/var/lib/postgresql/data/
      - ${PWD}/init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  netdataconfig:
  netdatalib:
  netdatacache:

networks:
  gitea:
    external: false
  postgres-network:
    driver: bridge
